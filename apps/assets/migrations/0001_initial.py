# Generated by Django 5.2.7 on 2025-10-23 19:52

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Asset',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('asset_type', models.CharField(choices=[('equity', 'Equities'), ('crypto', 'Crypto'), ('metal', 'Metals'), ('bond', 'Bonds'), ('real_estate', 'Real Estate'), ('managed', 'Managed Accounts'), ('custom', 'Custom')], db_index=True, help_text='General classification (Equity, Bond, Crypto, Metal, RealEstate, Custom, etc.)', max_length=20)),
                ('name', models.CharField(blank=True, help_text='Human-readable name (filled by enrichment for tradables, user-supplied for custom/real estate).', max_length=200, null=True)),
                ('is_custom', models.BooleanField(default=False, help_text='True if this asset was manually created (not from external data).')),
                ('currency', models.CharField(blank=True, help_text='Default currency in which this asset is quoted or valued (if applicable).', max_length=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'indexes': [models.Index(fields=['asset_type'], name='assets_asse_asset_t_529092_idx')],
            },
        ),
        migrations.CreateModel(
            name='AssetIdentifier',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('id_type', models.CharField(choices=[('TICKER', 'Ticker'), ('ISIN', 'ISIN'), ('CUSIP', 'CUSIP'), ('CIK', 'CIK')], db_index=True, max_length=20)),
                ('value', models.CharField(db_index=True, max_length=50)),
                ('is_primary', models.BooleanField(default=False, help_text='Marks the main identifier to display/use in trading.')),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='identifiers', to='assets.asset')),
            ],
            options={
                'indexes': [models.Index(fields=['id_type', 'value'], name='assets_asse_id_type_ef670d_idx'), models.Index(fields=['asset', 'is_primary'], name='assets_asse_asset_i_a4c149_idx')],
                'unique_together': {('id_type', 'value')},
            },
        ),
        migrations.CreateModel(
            name='BondDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('issuer', models.CharField(blank=True, max_length=200, null=True)),
                ('cusip', models.CharField(blank=True, max_length=12, null=True)),
                ('isin', models.CharField(blank=True, max_length=12, null=True)),
                ('bond_type', models.CharField(blank=True, max_length=50, null=True)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('coupon_rate', models.DecimalField(decimal_places=4, max_digits=6, null=True)),
                ('coupon_frequency', models.CharField(blank=True, max_length=20, null=True)),
                ('issue_date', models.DateField(blank=True, null=True)),
                ('maturity_date', models.DateField(blank=True, null=True)),
                ('call_date', models.DateField(blank=True, null=True)),
                ('last_price', models.DecimalField(blank=True, decimal_places=4, max_digits=20, null=True)),
                ('yield_to_maturity', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('yield_to_call', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('current_yield', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('accrued_interest', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('currency', models.CharField(blank=True, max_length=10, null=True)),
                ('rating', models.CharField(blank=True, max_length=10, null=True)),
                ('duration', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('convexity', models.DecimalField(blank=True, decimal_places=6, max_digits=12, null=True)),
                ('par_value', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('issue_size', models.BigIntegerField(blank=True, null=True)),
                ('outstanding_amount', models.BigIntegerField(blank=True, null=True)),
                ('volume', models.BigIntegerField(blank=True, null=True)),
                ('is_custom', models.BooleanField(default=False)),
                ('asset', models.OneToOneField(limit_choices_to={'asset_type': 'bond'}, on_delete=django.db.models.deletion.CASCADE, related_name='bond_detail', to='assets.asset')),
            ],
            options={
                'constraints': [models.UniqueConstraint(condition=models.Q(('isin', None), _negated=True), fields=('isin',), name='uniq_bond_isin'), models.UniqueConstraint(condition=models.Q(('cusip', None), _negated=True), fields=('cusip',), name='uniq_bond_cusip')],
            },
        ),
        migrations.CreateModel(
            name='CryptoDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exchange', models.CharField(blank=True, max_length=50, null=True)),
                ('currency', models.CharField(blank=True, help_text='Quote currency (usually USD)', max_length=10, null=True)),
                ('decimals', models.PositiveSmallIntegerField(default=8, help_text='Number of decimal places supported (BTC=8, ETH=18, etc.)')),
                ('last_price', models.DecimalField(blank=True, decimal_places=12, help_text='Last synced market price', max_digits=30, null=True)),
                ('market_cap', models.BigIntegerField(blank=True, null=True)),
                ('volume_24h', models.BigIntegerField(blank=True, null=True)),
                ('circulating_supply', models.DecimalField(blank=True, decimal_places=12, max_digits=30, null=True)),
                ('total_supply', models.DecimalField(blank=True, decimal_places=12, max_digits=30, null=True)),
                ('day_high', models.DecimalField(blank=True, decimal_places=12, max_digits=30, null=True)),
                ('day_low', models.DecimalField(blank=True, decimal_places=12, max_digits=30, null=True)),
                ('year_high', models.DecimalField(blank=True, decimal_places=12, max_digits=30, null=True)),
                ('year_low', models.DecimalField(blank=True, decimal_places=12, max_digits=30, null=True)),
                ('open_price', models.DecimalField(blank=True, decimal_places=12, max_digits=30, null=True)),
                ('previous_close', models.DecimalField(blank=True, decimal_places=12, max_digits=30, null=True)),
                ('changes_percentage', models.DecimalField(blank=True, decimal_places=4, help_text='24h change percentage', max_digits=10, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('website', models.URLField(blank=True, null=True)),
                ('logo_url', models.URLField(blank=True, null=True)),
                ('is_custom', models.BooleanField(default=False, help_text='True if user-defined (not synced from provider)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('asset', models.OneToOneField(limit_choices_to={'asset_type': 'crypto'}, on_delete=django.db.models.deletion.CASCADE, related_name='crypto_detail', to='assets.asset')),
            ],
            options={
                'indexes': [models.Index(fields=['exchange'], name='assets_cryp_exchang_5d13a0_idx'), models.Index(fields=['currency'], name='assets_cryp_currenc_2c1fde_idx'), models.Index(fields=['is_custom'], name='assets_cryp_is_cust_fd930e_idx')],
            },
        ),
        migrations.CreateModel(
            name='EquityDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exchange', models.CharField(blank=True, help_text='Stock exchange code (e.g., NYSE, NASDAQ)', max_length=50, null=True)),
                ('exchange_full_name', models.CharField(blank=True, help_text='Full name of the exchange', max_length=100, null=True)),
                ('country', models.CharField(blank=True, help_text='Country of primary listing', max_length=100, null=True)),
                ('ipo_date', models.DateField(blank=True, null=True)),
                ('sector', models.CharField(blank=True, max_length=100, null=True)),
                ('industry', models.CharField(blank=True, max_length=100, null=True)),
                ('is_etf', models.BooleanField(default=False)),
                ('is_adr', models.BooleanField(default=False)),
                ('is_mutual_fund', models.BooleanField(default=False)),
                ('listing_status', models.CharField(choices=[('ACTIVE', 'Active'), ('DELISTED', 'Delisted'), ('SUSPENDED', 'Suspended'), ('IPO', 'IPO Pending'), ('PENDING', 'Pending Data'), ('COLLISION', 'Collision')], db_index=True, default='ACTIVE', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('asset', models.OneToOneField(limit_choices_to={'asset_type': 'equity'}, on_delete=django.db.models.deletion.CASCADE, related_name='equity_detail', to='assets.asset')),
            ],
            options={
                'indexes': [models.Index(fields=['exchange'], name='assets_equi_exchang_77d1b8_idx'), models.Index(fields=['is_etf'], name='assets_equi_is_etf_e22122_idx'), models.Index(fields=['is_mutual_fund'], name='assets_equi_is_mutu_832740_idx')],
                'constraints': [models.UniqueConstraint(fields=('asset',), name='unique_equity_detail_asset')],
            },
        ),
        migrations.CreateModel(
            name='Holding',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=12, default=0, help_text='Number of units owned (shares, coins, ounces, etc.)', max_digits=30)),
                ('purchase_price', models.DecimalField(blank=True, decimal_places=12, help_text='Purchase price per unit in account currency', max_digits=30, null=True)),
                ('purchase_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='holdings', to='accounts.account')),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='holdings', to='assets.asset')),
            ],
            options={
                'ordering': ['account', 'asset'],
                'unique_together': {('account', 'asset')},
            },
        ),
        migrations.CreateModel(
            name='MarketDataCache',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_price', models.DecimalField(blank=True, decimal_places=4, max_digits=20, null=True)),
                ('change', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('change_percent', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('previous_close', models.DecimalField(blank=True, decimal_places=4, max_digits=20, null=True)),
                ('open_price', models.DecimalField(blank=True, decimal_places=4, max_digits=20, null=True)),
                ('high_price', models.DecimalField(blank=True, decimal_places=4, max_digits=20, null=True)),
                ('low_price', models.DecimalField(blank=True, decimal_places=4, max_digits=20, null=True)),
                ('volume', models.BigIntegerField(blank=True, null=True)),
                ('market_cap', models.BigIntegerField(blank=True, null=True)),
                ('pe_ratio', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('eps', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('dividend_yield', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('dividend_per_share', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('avg_volume', models.BigIntegerField(blank=True, null=True)),
                ('year_high', models.DecimalField(blank=True, decimal_places=4, max_digits=20, null=True)),
                ('year_low', models.DecimalField(blank=True, decimal_places=4, max_digits=20, null=True)),
                ('yield_to_maturity', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('coupon_rate', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('metal_purity', models.DecimalField(blank=True, decimal_places=3, max_digits=6, null=True)),
                ('last_synced', models.DateTimeField(auto_now=True)),
                ('asset', models.OneToOneField(limit_choices_to={'asset_type__in': ['equity', 'bond', 'crypto', 'metal']}, on_delete=django.db.models.deletion.CASCADE, related_name='market_data', to='assets.asset')),
            ],
            options={
                'verbose_name': 'Market Data Cache',
                'verbose_name_plural': 'Market Data Cache',
                'indexes': [models.Index(fields=['last_synced'], name='assets_mark_last_sy_0025e7_idx'), models.Index(fields=['asset'], name='assets_mark_asset_i_1d37f7_idx')],
            },
        ),
        migrations.CreateModel(
            name='MetalDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unit', models.CharField(default='oz', help_text='Measurement unit (e.g., ounce, gram)', max_length=20)),
                ('currency', models.CharField(blank=True, help_text='Quote currency (usually USD)', max_length=10, null=True)),
                ('last_price', models.DecimalField(blank=True, decimal_places=4, help_text='Last synced market price per unit', max_digits=20, null=True)),
                ('open_price', models.DecimalField(blank=True, decimal_places=4, help_text='Opening price for the trading session', max_digits=20, null=True)),
                ('day_high', models.DecimalField(blank=True, decimal_places=4, help_text='Intraday high', max_digits=20, null=True)),
                ('day_low', models.DecimalField(blank=True, decimal_places=4, help_text='Intraday low', max_digits=20, null=True)),
                ('previous_close', models.DecimalField(blank=True, decimal_places=4, help_text='Previous session close', max_digits=20, null=True)),
                ('volume', models.BigIntegerField(blank=True, help_text='Trading volume if available (sometimes blank for metals)', null=True)),
                ('is_custom', models.BooleanField(default=False, help_text='True if user-defined (not synced from provider)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('asset', models.OneToOneField(limit_choices_to={'asset_type': 'metal'}, on_delete=django.db.models.deletion.CASCADE, related_name='metal_detail', to='assets.asset')),
            ],
            options={
                'indexes': [models.Index(fields=['currency'], name='assets_meta_currenc_54055a_idx'), models.Index(fields=['is_custom'], name='assets_meta_is_cust_43d0e6_idx')],
            },
        ),
    ]
