"""
Django settings for finpro project.

Generated by 'django-admin startproject' using Django 5.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""


from pathlib import Path
from datetime import timedelta
from corsheaders.defaults import default_headers
import sys

# Temporarily silence pycountry's stderr output
import io


class SuppressPycountryErrors(io.StringIO):
    def write(self, text):
        if "Currency" in text and "already taken" in text:
            return  # Ignore duplicate currency warning
        super().write(text)


# sys.stderr = SuppressPycountryErrors()
##########


TESTING = 'test' in sys.argv

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
sys.path.insert(0, str(BASE_DIR / "apps"))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-rwt2!_cv%dsrqt@qfa(crx%z%g85mzml7k58r5^0)y%qj3nd*4'

FMP_API_KEY = 'OUhgmsouzr7iyAeEf0ktRtn69OfjF7W4'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

"""
ONCE DONE APP MOVEMENT COME BACK HERE.
"""

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'rest_framework_simplejwt.token_blacklist',
    'corsheaders',
    'users',
    'subscriptions',
    'common',
    'portfolios',
    'schemas',
    # 'finances',
    # 'apps.accounts.apps.AccountsConfig',
    # 'apps.assets.apps.AssetsConfig',
    # 'apps.finances',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'finpro.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'finpro.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'finpro',
        'HOST': 'localhost',
        'USER': 'root',
        'PASSWORD': 'Helpome123'
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

AUTH_USER_MODEL = 'users.User'

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'users.authentication.JWTFromCookieAuthentication',
    ),
}

SIMPLE_JWT = {
    "AUTH_HEADER_TYPES": ("JWT",),
    "ACCESS_TOKEN_LIFETIME": timedelta(minutes=5),
    "REFRESH_TOKEN_LIFETIME": timedelta(minutes=10),
    "ROTATE_REFRESH_TOKENS": True,
    "BLACKLIST_AFTER_ROTATION": True,
    "AUTH_COOKIE": "access",  # cookie key for access token
    "AUTH_COOKIE_REFRESH": "refresh",  # cookie key for refresh token
    "AUTH_COOKIE_HTTP_ONLY": True,
    "AUTH_COOKIE_PATH": "/",
    "AUTH_COOKIE_SAMESITE": "Lax",
}

EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
    },
    "root": {
        "handlers": ["console"],
        "level": "DEBUG",
    },
}

# CORS
CORS_ALLOW_CREDENTIALS = True
CORS_ALLOW_HEADERS = list(default_headers) + [
    "content-type",
    "x-csrftoken",
    "authorization",
    "accept",
    "accept-language",
    "origin",
    "x-requested-with",
]
CORS_ALLOWED_ORIGINS = [
    "http://localhost:5173",  # your React frontend
]

# ===============================
# CSRF & Cookie Settings
# ===============================

# CSRF cookie should always be HttpOnly for security
CSRF_COOKIE_HTTPONLY = True

# ---- Development (React on http://localhost:5173, Django on http://127.0.0.1:8000) ----
# Allow cross-origin cookies for local dev
CSRF_COOKIE_SAMESITE = "Lax"
SESSION_COOKIE_SAMESITE = "Lax"
SIMPLE_JWT["AUTH_COOKIE_SAMESITE"] = "Lax"  # -- lax works on laptop??

# No HTTPS in dev
CSRF_COOKIE_SECURE = False
SESSION_COOKIE_SECURE = False
COOKIE_SECURE = False

# CSRF trusted origin (React dev server)
CSRF_TRUSTED_ORIGINS = [
    "http://localhost:5173",
]

# ---- Production (Same origin, HTTPS) ----
"""
# CSRF_COOKIE_HTTPONLY = True  # Keep this for security

# CSRF & session cookies for production (same origin)
CSRF_COOKIE_SAMESITE = "Lax"
SESSION_COOKIE_SAMESITE = "Lax"
SIMPLE_JWT["AUTH_COOKIE_SAMESITE"] = "Lax"

# Require HTTPS in production
CSRF_COOKIE_SECURE = True
SESSION_COOKIE_SECURE = True
COOKIE_SECURE = True

# Add your production domain for CSRF
CSRF_TRUSTED_ORIGINS = [
    "https://yourdomain.com",
]
"""
